/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { SimpleDAO, SimpleDAOInterface } from "../SimpleDAO";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyExecuted",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyMember",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyVoted",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMember",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposalFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposalNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "QuorumNotMet",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingEnded",
    type: "error",
  },
  {
    inputs: [],
    name: "VotingNotEnded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votingPower",
        type: "uint256",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "support",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votingPower",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_VOTING_POWER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_votingPower",
        type: "uint256",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votesFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesAgainst",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalVotingPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "voted",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "choice",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "memberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "bool",
        name: "isMember",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "joinedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingPower",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextProposalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votesFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votesAgainst",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quorum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quorum",
        type: "uint256",
      },
    ],
    name: "setQuorum",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_support",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526001600255603360045534801561001a57600080fd5b5060058054336001600160a01b031990911681179091556040805160608101825260018082524260208084019182528385018381526000968752908390529385209251835460ff1916901515178355518282015591516002909101556003556112cf90819061008990396000f3fe6080604052600436106101185760003560e01c806343859632116100a0578063c1ba4e5911610064578063c1ba4e5914610354578063c7f758a814610374578063c9d27afe14610394578063db2e21bc146103b4578063f851a440146103c957600080fd5b806343859632146102785780636ac1e01f146102e8578063805a81421461030857806398041ea31461031d578063b1610d7e1461033d57600080fd5b806311acc1a7116100e757806311acc1a71461020457806311aee3801461022357806312065fe0146102395780631703a0181461024c5780632ab09d141461026257600080fd5b8063013cf08b1461012457806308ae4b0c146101645780630b1ca49a146101c25780630d61b519146101e457600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004610e43565b610401565b60405161015b9b9a99989796959493929190610ea2565b60405180910390f35b34801561017057600080fd5b506101a561017f366004610f2c565b600160208190526000918252604090912080549181015460029091015460ff9092169183565b60408051931515845260208401929092529082015260600161015b565b3480156101ce57600080fd5b506101e26101dd366004610f2c565b6104f8565b005b3480156101f057600080fd5b506101e26101ff366004610e43565b6105d4565b34801561021057600080fd5b506003545b60405190815260200161015b565b34801561022f57600080fd5b5061021560035481565b34801561024557600080fd5b5047610215565b34801561025857600080fd5b5061021560045481565b34801561026e57600080fd5b5061021560025481565b34801561028457600080fd5b506102d1610293366004610f50565b6000918252602082815260408084206001600160a01b03939093168452600a8301825280842054600b9093019091529091205460ff91821692911690565b60408051921515835290151560208301520161015b565b3480156102f457600080fd5b50610215610303366004610fa6565b6107df565b34801561031457600080fd5b50610215600181565b34801561032957600080fd5b506101e2610338366004611071565b6108f0565b34801561034957600080fd5b5061021562093a8081565b34801561036057600080fd5b506101e261036f366004610e43565b610a4f565b34801561038057600080fd5b5061014461038f366004610e43565b610adc565b3480156103a057600080fd5b506101e26103af36600461109d565b610c0b565b3480156103c057600080fd5b506101e2610da1565b3480156103d557600080fd5b506005546103e9906001600160a01b031681565b6040516001600160a01b03909116815260200161015b565b60006020819052908152604090208054600182015460028301805492936001600160a01b0390921692610433906110c7565b80601f016020809104026020016040519081016040528092919081815260200182805461045f906110c7565b80156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b50505050600383015460048401546005850154600686015460078701546008880154600990980154969794966001600160a01b0390941695509193909260ff808216916101009004168b565b6005546001600160a01b0316331461052357604051634755657960e01b815260040160405180910390fd5b6001600160a01b03811660009081526001602052604090205460ff1661055c5760405163148fe22160e11b815260040160405180910390fd5b6001600160a01b03811660009081526001602081905260408220805460ff19168155908101829055600201819055600380549161059883611117565b90915550506040516001600160a01b038216907f6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de68449290600090a250565b6000818152602081905260409020600901548190610100900460ff1661060d5760405163635e873760e01b815260040160405180910390fd5b60008281526020819052604090206008810154421161063f57604051633fc30bd160e11b815260040160405180910390fd5b600981015460ff161561066557604051630dc1019760e01b815260040160405180910390fd5b60008160060154826005015461067b919061112e565b9050600061068860035490565b9050600454816106989190611147565b6106a3836064611147565b10156106c257604051636bcf412560e11b815260040160405180910390fd5b82600601548360050154116106ea5760405163bb31b06360e01b815260040160405180910390fd5b60098301805460ff1916600190811790915560038401541580159061071b575060048401546001600160a01b031615155b1561079b578360030154471061079757600484015460038501546040516000926001600160a01b031691908381818185875af1925050503d806000811461077e576040519150601f19603f3d011682016040523d82523d6000602084013e610783565b606091505b505090508061079157600091505b5061079b565b5060005b857f948f4a9cd986f1118c3fbd459f7a22b23c0693e1ca3ef06a6a8be5aa7d39cc03826040516107cf911515815260200190565b60405180910390a2505050505050565b3360009081526001602052604081205460ff1661080f5760405163148fe22160e11b815260040160405180910390fd5b60028054600091826108208361115e565b9091555060008181526020819052604090208181556001810180546001600160a01b031916331790559091506002810161085a87826111c6565b50600381018590556004810180546001600160a01b0319166001600160a01b03861617905542600782018190556108959062093a809061112e565b600882015560098101805461ff001916610100179055604051339083907f7585f467599d0f008985f231af99293be388626ac16ca59505c2f8f88969cd63906108df908a90611286565b60405180910390a350949350505050565b6005546001600160a01b0316331461091b57604051634755657960e01b815260040160405180910390fd5b6001600160a01b03821660009081526001602052604090205460ff1615610955576040516340803a5f60e11b815260040160405180910390fd5b60018110156109a25760405162461bcd60e51b8152602060048201526014602482015273566f74696e6720706f77657220746f6f206c6f7760601b60448201526064015b60405180910390fd5b6040805160608101825260018082524260208084019182528385018681526001600160a01b0388166000908152918490529481209351845460ff191690151517845590519183019190915591516002909101556003805491610a038361115e565b9190505550816001600160a01b03167fede8eed4383e9241982619b94dd83e488b274cced0fd07b8c0092a393defd52f82604051610a4391815260200190565b60405180910390a25050565b6005546001600160a01b03163314610a7a57604051634755657960e01b815260040160405180910390fd5b600081118015610a8b575060648111155b610ad75760405162461bcd60e51b815260206004820152601960248201527f496e76616c69642071756f72756d2070657263656e74616765000000000000006044820152606401610999565b600455565b60008181526020819052604081208054600182015460038301546004840154600585015460068601546007870154600888015460098901548a996060998b998a998a998a998a998a998a998a996001600160a01b039788169760028b01979616949392919060ff16428210801590610b59575060098b015460ff16155b888054610b65906110c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610b91906110c7565b8015610bde5780601f10610bb357610100808354040283529160200191610bde565b820191906000526020600020905b815481529060010190602001808311610bc157829003601f168201915b505050505098509b509b509b509b509b509b509b509b509b509b509b505091939597999b90929496989a50565b3360009081526001602052604090205460ff16610c3b5760405163148fe22160e11b815260040160405180910390fd5b6000828152602081905260409020600901548290610100900460ff16610c745760405163635e873760e01b815260040160405180910390fd5b60008381526020819052604090206008810154421115610ca757604051637a19ed0560e01b815260040160405180910390fd5b336000908152600a8201602052604090205460ff1615610cda57604051637c9a1cf960e01b815260040160405180910390fd5b336000908152600a820160209081526040808320805460ff199081166001908117909255600b860184528285208054891580159190931617905592529091206002015490610d415780826005016000828254610d36919061112e565b90915550610d5b9050565b80826006016000828254610d55919061112e565b90915550505b60408051851515815260208101839052339187917fcbdf6214089cba887ecbf35a0b6a734589959c9763342c756bb2a80ca2bc9f6e910160405180910390a35050505050565b6005546001600160a01b03163314610dcc57604051634755657960e01b815260040160405180910390fd5b6005546040516000916001600160a01b03169047908381818185875af1925050503d8060008114610e19576040519150601f19603f3d011682016040523d82523d6000602084013e610e1e565b606091505b5050905080610e40576040516312171d8360e31b815260040160405180910390fd5b50565b600060208284031215610e5557600080fd5b5035919050565b6000815180845260005b81811015610e8257602081850181015186830182015201610e66565b506000602082860101526020601f19601f83011685010191505092915050565b8b81526001600160a01b038b8116602083015261016060408301819052600091610ece8483018e610e5c565b606085019c909c529990991660808301525060a081019690965260c086019490945260e08501929092526101008401521515610120830152151561014090910152509392505050565b6001600160a01b0381168114610e4057600080fd5b600060208284031215610f3e57600080fd5b8135610f4981610f17565b9392505050565b60008060408385031215610f6357600080fd5b823591506020830135610f7581610f17565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b8035610fa181610f17565b919050565b600080600060608486031215610fbb57600080fd5b833567ffffffffffffffff80821115610fd357600080fd5b818601915086601f830112610fe757600080fd5b813581811115610ff957610ff9610f80565b604051601f8201601f19908116603f0116810190838211818310171561102157611021610f80565b8160405282815289602084870101111561103a57600080fd5b8260208601602083013760006020848301015280975050505050506020840135915061106860408501610f96565b90509250925092565b6000806040838503121561108457600080fd5b823561108f81610f17565b946020939093013593505050565b600080604083850312156110b057600080fd5b8235915060208301358015158114610f7557600080fd5b600181811c908216806110db57607f821691505b6020821081036110fb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008161112657611126611101565b506000190190565b8082018082111561114157611141611101565b92915050565b808202811582820484141761114157611141611101565b60006001820161117057611170611101565b5060010190565b601f8211156111c157600081815260208120601f850160051c8101602086101561119e5750805b601f850160051c820191505b818110156111bd578281556001016111aa565b5050505b505050565b815167ffffffffffffffff8111156111e0576111e0610f80565b6111f4816111ee84546110c7565b84611177565b602080601f83116001811461122957600084156112115750858301515b600019600386901b1c1916600185901b1785556111bd565b600085815260208120601f198616915b8281101561125857888601518255948401946001909101908401611239565b50858210156112765787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000610f496020830184610e5c56fea26469706673582212204e85744c0808b11001a850f5048303728f498eb6552633613b331568caa8d92564736f6c63430008140033";

type SimpleDAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleDAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleDAO__factory extends ContractFactory {
  constructor(...args: SimpleDAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleDAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleDAO__factory {
    return super.connect(runner) as SimpleDAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleDAOInterface {
    return new Interface(_abi) as SimpleDAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleDAO {
    return new Contract(address, _abi, runner) as unknown as SimpleDAO;
  }
}
