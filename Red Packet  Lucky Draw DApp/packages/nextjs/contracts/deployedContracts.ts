/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  8453: {
    RandomPacket: {
      address: "0x0A708C4aB7ef649f9d0B80fd64cD59259ca012B8",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_vrfCoordinator",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_keyHash",
              type: "bytes32",
            },
            {
              internalType: "uint64",
              name: "_subscriptionId",
              type: "uint64",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "packetId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalValue",
              type: "uint256",
            },
          ],
          name: "PacketCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "packetId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "opener",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "reward",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "enum RandomPacket.RewardType",
              name: "rewardType",
              type: "uint8",
            },
          ],
          name: "PacketOpened",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "randomValue",
              type: "uint256",
            },
          ],
          name: "RandomnessFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "packetId",
              type: "uint256",
            },
          ],
          name: "RandomnessRequested",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "authorizedCreators",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "callbackGasLimit",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_packetId",
              type: "uint256",
            },
          ],
          name: "cancelExpiredPacket",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_packetId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_commitment",
              type: "bytes32",
            },
          ],
          name: "commitForPacket",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "commitRevealData",
          outputs: [
            {
              internalType: "bytes32",
              name: "commitment",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "revealDeadline",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "revealed",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "commitRevealWindow",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_numRewards",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "_rewardAmounts",
              type: "uint256[]",
            },
          ],
          name: "createETHPacket",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "enum RandomPacket.RewardType[]",
              name: "_rewardTypes",
              type: "uint8[]",
            },
            {
              internalType: "uint256[]",
              name: "_rewardAmounts",
              type: "uint256[]",
            },
            {
              internalType: "address[]",
              name: "_tokenAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "_nftIds",
              type: "uint256[]",
            },
          ],
          name: "createMixedPacket",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_tokenAddress",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "_rewardAmounts",
              type: "uint256[]",
            },
            {
              internalType: "bool",
              name: "_useVRF",
              type: "bool",
            },
          ],
          name: "createTokenPacket",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "defaultExpiryTime",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "emergencyWithdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_requestId",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "_randomWords",
              type: "uint256[]",
            },
          ],
          name: "fulfillRandomWords",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_packetId",
              type: "uint256",
            },
          ],
          name: "getPacket",
          outputs: [
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalValue",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiresAt",
              type: "uint256",
            },
            {
              internalType: "enum RandomPacket.PacketStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "rewardCount",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserPackets",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "keyHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "nextPacketId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_packetId",
              type: "uint256",
            },
          ],
          name: "openPacket",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_packetId",
              type: "uint256",
            },
          ],
          name: "openPacketWithVRF",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "packets",
          outputs: [
            {
              internalType: "address",
              name: "creator",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "totalValue",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "createdAt",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "expiresAt",
              type: "uint256",
            },
            {
              internalType: "enum RandomPacket.PacketStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "enum RandomPacket.RandomnessSource",
              name: "randomnessSource",
              type: "uint8",
            },
            {
              internalType: "bool",
              name: "requiresVRF",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "vrfRequestId",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "requestConfirmations",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_packetId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_nonce",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "revealAndOpen",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_creator",
              type: "address",
            },
            {
              internalType: "bool",
              name: "_authorized",
              type: "bool",
            },
          ],
          name: "setAuthorizedCreator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_expiryTime",
              type: "uint256",
            },
          ],
          name: "setDefaultExpiryTime",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_keyHash",
              type: "bytes32",
            },
            {
              internalType: "uint64",
              name: "_subscriptionId",
              type: "uint64",
            },
            {
              internalType: "uint16",
              name: "_requestConfirmations",
              type: "uint16",
            },
            {
              internalType: "uint32",
              name: "_callbackGasLimit",
              type: "uint32",
            },
          ],
          name: "setVRFParameters",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "subscriptionId",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userPackets",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "vrfCoordinator",
          outputs: [
            {
              internalType: "contract VRFCoordinatorV2Interface",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "vrfRequestToPacket",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 33385969,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
