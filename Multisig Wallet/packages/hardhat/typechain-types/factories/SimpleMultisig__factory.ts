/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SimpleMultisig,
  SimpleMultisigInterface,
} from "../SimpleMultisig";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_numConfirmationsRequired",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ConfirmTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "RevokeConfirmation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "SubmitTransaction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "confirmTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "getTransaction",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isConfirmed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numConfirmationsRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_txIndex",
        type: "uint256",
      },
    ],
    name: "revokeConfirmation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "submitTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "numConfirmations",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200151b3803806200151b833981016040819052620000349162000281565b60008251116200007d5760405162461bcd60e51b815260206004820152600f60248201526e13dddb995c9cc81c995c5d5a5c9959608a1b60448201526064015b60405180910390fd5b6000811180156200008f575081518111155b620000ee5760405162461bcd60e51b815260206004820152602860248201527f496e76616c6964206e756d626572206f6620726571756972656420636f6e6669604482015267726d6174696f6e7360c01b606482015260840162000074565b60005b8251811015620002435760008382815181106200011257620001126200035b565b6020026020010151905060006001600160a01b0316816001600160a01b031603620001705760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21037bbb732b960991b604482015260640162000074565b6001600160a01b03811660009081526001602052604090205460ff1615620001ce5760405162461bcd60e51b815260206004820152601060248201526f4f776e6572206e6f7420756e6971756560801b604482015260640162000074565b6001600160a01b031660008181526001602081905260408220805460ff191682179055815490810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319169091179055806200023a8162000371565b915050620000f1565b506002555062000399565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200027c57600080fd5b919050565b600080604083850312156200029557600080fd5b82516001600160401b0380821115620002ad57600080fd5b818501915085601f830112620002c257600080fd5b8151602082821115620002d957620002d96200024e565b8160051b604051601f19603f830116810181811086821117156200030157620003016200024e565b6040529283528183019350848101820192898411156200032057600080fd5b948201945b838610156200034957620003398662000264565b8552948201949382019362000325565b97909101519698969750505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200039257634e487b7160e01b600052601160045260246000fd5b5060010190565b61117280620003a96000396000f3fe6080604052600436106100c65760003560e01c806380f59a651161007f578063c01a8c8411610059578063c01a8c841461028b578063c6427474146102ab578063d0549b85146102cb578063ee22610b146102e157600080fd5b806380f59a651461020e5780639ace38c214610249578063a0e67e2b1461026957600080fd5b8063025e7c271461010c57806312065fe01461014957806320ea8d86146101665780632e7700f0146101885780632f54bf6e1461019d57806333ea3dc8146101dd57600080fd5b36610107576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b34801561011857600080fd5b5061012c610127366004610c3e565b610301565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561015557600080fd5b50475b604051908152602001610140565b34801561017257600080fd5b50610186610181366004610c3e565b61032b565b005b34801561019457600080fd5b50600454610158565b3480156101a957600080fd5b506101cd6101b8366004610c73565b60016020526000908152604090205460ff1681565b6040519015158152602001610140565b3480156101e957600080fd5b506101fd6101f8366004610c3e565b6104c3565b604051610140959493929190610cdb565b34801561021a57600080fd5b506101cd610229366004610d16565b600360209081526000928352604080842090915290825290205460ff1681565b34801561025557600080fd5b506101fd610264366004610c3e565b6105be565b34801561027557600080fd5b5061027e610697565b6040516101409190610d42565b34801561029757600080fd5b506101866102a6366004610c3e565b6106f9565b3480156102b757600080fd5b506101866102c6366004610da5565b610890565b3480156102d757600080fd5b5061015860025481565b3480156102ed57600080fd5b506101866102fc366004610c3e565b610a10565b6000818154811061031157600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526001602052604090205460ff166103635760405162461bcd60e51b815260040161035a90610e70565b60405180910390fd5b600454819081106103865760405162461bcd60e51b815260040161035a90610e96565b816004818154811061039a5761039a610ecd565b600091825260209091206003600590920201015460ff16156103ce5760405162461bcd60e51b815260040161035a90610ee3565b6000600484815481106103e3576103e3610ecd565b600091825260208083208784526003825260408085203386529092529220546005909102909101915060ff1661045b5760405162461bcd60e51b815260206004820152601960248201527f5472616e73616374696f6e206e6f7420636f6e6669726d656400000000000000604482015260640161035a565b60018160040160008282546104709190610f30565b90915550506000848152600360209081526040808320338085529252808320805460ff191690555186927ff0dca620e2e81f7841d07bcc105e1704fb01475b278a9d4c236e1c62945edd5591a350505050565b60008060606000806000600487815481106104e0576104e0610ecd565b6000918252602090912060059091020180546001820154600383015460048401546002850180549596506001600160a01b039094169492939260ff90921691839061052a90610f49565b80601f016020809104026020016040519081016040528092919081815260200182805461055690610f49565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b50505050509250955095509550955095505091939590929450565b600481815481106105ce57600080fd5b60009182526020909120600590910201805460018201546002830180546001600160a01b03909316945090929161060490610f49565b80601f016020809104026020016040519081016040528092919081815260200182805461063090610f49565b801561067d5780601f106106525761010080835404028352916020019161067d565b820191906000526020600020905b81548152906001019060200180831161066057829003601f168201915b505050506003830154600490930154919260ff1691905085565b606060008054806020026020016040519081016040528092919081815260200182805480156106ef57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106d1575b5050505050905090565b3360009081526001602052604090205460ff166107285760405162461bcd60e51b815260040161035a90610e70565b6004548190811061074b5760405162461bcd60e51b815260040161035a90610e96565b816004818154811061075f5761075f610ecd565b600091825260209091206003600590920201015460ff16156107935760405162461bcd60e51b815260040161035a90610ee3565b6000838152600360209081526040808320338452909152902054839060ff16156107ff5760405162461bcd60e51b815260206004820152601d60248201527f5472616e73616374696f6e20616c726561647920636f6e6669726d6564000000604482015260640161035a565b60006004858154811061081457610814610ecd565b9060005260206000209060050201905060018160040160008282546108399190610f83565b90915550506000858152600360209081526040808320338085529252808320805460ff191660011790555187927f5cbe105e36805f7820e291f799d5794ff948af2a5f664e580382defb6339004191a35050505050565b3360009081526001602052604090205460ff166108bf5760405162461bcd60e51b815260040161035a90610e70565b600480546040805160a0810182526001600160a01b03878116825260208201878152928201868152600060608401819052608084018190526001860187559590955281517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6005860290810180546001600160a01b0319169290931691909117825592517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c84015593519293909290917f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d019061099c9082610fe5565b50606082015160038201805460ff19169115159190911790556080909101516004909101556040516001600160a01b03851690829033907fd5a05bf70715ad82a09a756320284a1b54c9ff74cd0f8cce6219e79b563fe59d90610a0290889088906110a5565b60405180910390a450505050565b3360009081526001602052604090205460ff16610a3f5760405162461bcd60e51b815260040161035a90610e70565b60045481908110610a625760405162461bcd60e51b815260040161035a90610e96565b8160048181548110610a7657610a76610ecd565b600091825260209091206003600590920201015460ff1615610aaa5760405162461bcd60e51b815260040161035a90610ee3565b600060048481548110610abf57610abf610ecd565b9060005260206000209060050201905060025481600401541015610b4b5760405162461bcd60e51b815260206004820152603760248201527f43616e6e6f742065786563757465207472616e73616374696f6e202d20696e7360448201527f756666696369656e7420636f6e6669726d6174696f6e73000000000000000000606482015260840161035a565b60038101805460ff191660019081179091558154908201546040516000926001600160a01b03169190610b829060028601906110c6565b60006040518083038185875af1925050503d8060008114610bbf576040519150601f19603f3d011682016040523d82523d6000602084013e610bc4565b606091505b5050905080610c0a5760405162461bcd60e51b8152602060048201526012602482015271151c985b9cd858dd1a5bdb8819985a5b195960721b604482015260640161035a565b604051859033907f5445f318f4f5fcfb66592e68e0cc5822aa15664039bd5f0ffde24c5a8142b1ac90600090a35050505050565b600060208284031215610c5057600080fd5b5035919050565b80356001600160a01b0381168114610c6e57600080fd5b919050565b600060208284031215610c8557600080fd5b610c8e82610c57565b9392505050565b6000815180845260005b81811015610cbb57602081850181015186830182015201610c9f565b506000602082860101526020601f19601f83011685010191505092915050565b60018060a01b038616815284602082015260a060408201526000610d0260a0830186610c95565b931515606083015250608001529392505050565b60008060408385031215610d2957600080fd5b82359150610d3960208401610c57565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610d835783516001600160a01b031683529284019291840191600101610d5e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610dba57600080fd5b610dc384610c57565b925060208401359150604084013567ffffffffffffffff80821115610de757600080fd5b818601915086601f830112610dfb57600080fd5b813581811115610e0d57610e0d610d8f565b604051601f8201601f19908116603f01168101908382118183101715610e3557610e35610d8f565b81604052828152896020848701011115610e4e57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6020808252600c908201526b2737ba1030b71037bbb732b960a11b604082015260600190565b6020808252601a908201527f5472616e73616374696f6e20646f6573206e6f74206578697374000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6020808252601c908201527f5472616e73616374696f6e20616c726561647920657865637574656400000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b81810381811115610f4357610f43610f1a565b92915050565b600181811c90821680610f5d57607f821691505b602082108103610f7d57634e487b7160e01b600052602260045260246000fd5b50919050565b80820180821115610f4357610f43610f1a565b601f821115610fe057600081815260208120601f850160051c81016020861015610fbd5750805b601f850160051c820191505b81811015610fdc57828155600101610fc9565b5050505b505050565b815167ffffffffffffffff811115610fff57610fff610d8f565b6110138161100d8454610f49565b84610f96565b602080601f83116001811461104857600084156110305750858301515b600019600386901b1c1916600185901b178555610fdc565b600085815260208120601f198616915b8281101561107757888601518255948401946001909101908401611058565b50858210156110955787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006110be6040830184610c95565b949350505050565b60008083546110d481610f49565b600182811680156110ec576001811461110157611130565b60ff1984168752821515830287019450611130565b8760005260208060002060005b858110156111275781548a82015290840190820161110e565b50505082870194505b5092969550505050505056fea264697066735822122013e4f88c18766861a2658b0e17c258d927fb150c5d9c4129f979773f0de1124064736f6c63430008140033";

type SimpleMultisigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleMultisigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleMultisig__factory extends ContractFactory {
  constructor(...args: SimpleMultisigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owners: AddressLike[],
    _numConfirmationsRequired: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owners,
      _numConfirmationsRequired,
      overrides || {}
    );
  }
  override deploy(
    _owners: AddressLike[],
    _numConfirmationsRequired: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owners,
      _numConfirmationsRequired,
      overrides || {}
    ) as Promise<
      SimpleMultisig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleMultisig__factory {
    return super.connect(runner) as SimpleMultisig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleMultisigInterface {
    return new Interface(_abi) as SimpleMultisigInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleMultisig {
    return new Contract(address, _abi, runner) as unknown as SimpleMultisig;
  }
}
